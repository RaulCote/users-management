{"version":3,"sources":["components/newuser.js","components/modal.js","components/edituser.js","components/users.js","components/navbar.js","components/sidebar.js","App.js","serviceWorker.js","index.js"],"names":["NewUser","state","name","email","phone","role","picture","alert","handleInput","event","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","_this$state","props","onSubmit","_this$state2","this","react_default","a","createElement","Fragment","className","type","onChange","Component","Modal","show","style","position","top","bottom","left","right","backgroundColor","padding","borderRadius","maxWidth","minHeight","margin","children","onClick","onClose","EditUser","data","isOpen","handleEdit","onCallback","index","toggleModal","src","process","alt","modal","Users","users","initialData","slice","isVisible","usersSearch","search","push","splice","handleLoadMore","length","handleSearch","result","filter","user","userName","toUpperCase","userRole","userEmail","includes","_this2","newuser","placeholder","map","key","edituser","NavBar","class","SideBar","App","navbar","sidebar","components_users","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a6563f3f.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n\nclass NewUser extends Component {\n\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    role: 'User',\n    picture: 'http://placehold.it/32x32',\n    alert: ''\n  }\n\n  handleInput = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { name, email, phone, role, picture } = this.state;\n    if (!name || !email) {\n      this.setState({\n        alert: 'Name or email cannot be empty.'\n      })\n    } else {\n      this.props.onSubmit(name, email, phone, role, picture)\n      this.setState({\n        name: '',\n        email:'',\n        phone:''\n      })\n    }\n  }\n\n  render() {\n    const { name, email, phone, alert } = this.state;\n    \n    return (\n      <React.Fragment>\n        <form className=\"form-container\" onSubmit={this.handleSubmit}>\n          <div>\n            <p>Name</p>\n            <input className=\"form-input-modal\" type=\"text\" name=\"name\" value={name} onChange={this.handleInput}></input>\n          </div>\n          <div>\n            <p>Email</p>\n            <input className=\"form-input-modal\" type=\"email\" name=\"email\" value={email} onChange={this.handleInput}></input>\n          </div>\n          <div>\n            <p>Phone</p>\n            <input className=\"form-input-modal\" type=\"phone\" name=\"phone\" value={phone} onChange={this.handleInput}></input>\n          </div>\n          <div><button className=\"form-input-button\" type=\"submit\" value=\"submit form\">Submit</button></div>\n        </form>\n        { alert ? <h1 className=\"alert-warning\">{alert}</h1> : <div></div>}\n      </React.Fragment>\n    )\n  }\n}\n\nexport default NewUser;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Modal extends Component {\n  render() {\n    // Render nothing if the \"show\" prop is false\n    if(!this.props.show) {\n      return null;\n    }\n\n    // background\n    const backdropStyle = {\n      position: 'fixed',\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      backgroundColor: 'rgba(0,0,0,0.3)',\n      padding: 50\n    };\n\n    // modal \"window\"\n    const modalStyle = {\n      backgroundColor: '#fff',\n      borderRadius: 5,\n      maxWidth: 500,\n      minHeight: 300,\n      margin: '0 auto',\n      // display: 'flex',\n      // alignItems: 'center',\n      // flexWrap: 'wrap',\n      // justifyContent: 'center'\n      // padding: 50\n    };\n\n//     display: flex;\n// align-items: center;\n// justify-content: center;\n// flex-wrap: wrap;\n\n    return (\n      <div className=\"backdrop\" style={backdropStyle}>\n        <div className=\"modal\" style={modalStyle}>\n          {this.props.children}\n\n          <div className=\"footer\">\n            <button className=\"modal-close-btn\" onClick={this.props.onClose}>\n              Close\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  show: PropTypes.bool,\n  children: PropTypes.node\n};\n\nexport default Modal;","import React, { Component } from 'react';\nimport Modal from './modal';\n\nclass EditUser extends Component {\n\n  state = {\n    name: this.props.data.name,\n    email: this.props.data.email,\n    phone: this.props.data.phone,\n    isOpen: false\n  }\n  \n  handleInput = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    })\n  }\n\n  handleEdit = (event) => {\n    event.preventDefault();\n    const { name, email, phone } = this.state;\n    if (!name || !email) {\n      this.setState({\n        alert: 'Name or email cannot be empty.'\n      })\n    } else {\n      this.props.onCallback(this.props.index, name, email, phone, this.props.data.role, this.props.data.picture)\n      this.setState({\n        name: name,\n        email: email,\n        phone: phone,\n        isOpen: false\n      })\n    }\n  }\n\n  toggleModal = () => {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  render() {\n    const { name, email, phone, alert } = this.state;\n    return (\n      <React.Fragment>\n        <div className=\"edit-button\" onClick={this.toggleModal}><img className=\"img-navbar\" src={process.env.PUBLIC_URL + 'settings-icon.png'} alt='edit user'/></div>\n        <Modal show={this.state.isOpen} onClose={this.toggleModal}>\n          <form className=\"form-container\" onSubmit={this.handleEdit}>\n            <div>\n              <p>Name</p>\n              <input className=\"form-input-modal\" type=\"text\" name=\"name\" value={name}  onChange={this.handleInput}></input>\n            </div>\n            <div>\n              <p>Email</p>\n              <input className=\"form-input-modal\" type=\"email\" name=\"email\" value={email}  onChange={this.handleInput}></input>\n            </div>\n            <div>\n              <p>Phone</p>\n              <input className=\"form-input-modal\" type=\"phone\" name=\"phone\" value={phone} onChange={this.handleInput}></input>\n            </div>\n            <div><button  className=\"form-input-button\" type=\"submit\" value=\"submit form\">Submit</button></div>\n          </form>\n          { alert ? <h1 className=\"alert-warning\">{alert}</h1>: <div></div>}\n        </Modal>   \n      </React.Fragment>\n    )\n  }\n}\n\nexport default EditUser;\n","import React, { Component } from 'react';\nimport initialData from '../data/users.json';\nimport NewUser from './newuser';\nimport Modal from './modal';\nimport EditUser from './edituser';\n\nclass Users extends Component {\n\n  state = {\n    users: initialData.slice(0, 4),\n    isVisible: true,\n    usersSearch: initialData.slice(0, 4),\n    search: '',\n    isOpen: false\n  }\n\n  handleSubmit = ( name, email, phone, role, picture ) => {\n    const { users } = this.state;\n    users.push({\n      name: name,\n      email: email,\n      phone: phone,\n      role: role,\n      picture: picture\n    })\n    this.setState({\n      users: users,\n      usersSearch: users,\n      isOpen: false\n    })\n  }\n\n  handleEdit = ( index, name, email, phone, role, picture ) => {\n    const { users } = this.state;\n    users.splice(index, 1, {\n      name: name,\n      email: email,\n      phone: phone,\n      role: role,\n      picture: picture\n    })\n    this.setState({\n      users: users,\n      usersSearch: users,\n      isOpen: false\n    })\n  }\n\n    handleLoadMore = () => {\n    const { users } = this.state;\n\n    if ( users.length < initialData.length ) {\n      users.push(initialData[users.length])\n        this.setState({\n          users,\n          usersSearch: users\n        })\n    } else {\n      this.setState({\n        usersSearch: users,\n        isVisible: false\n      })\n    }\n\n  }\n\n  handleSearch = (event) => {\n  const { users } = this.state;\n\n    const result = users.filter((user,index) => {\n      let userName = user.name.toUpperCase();\n      let userRole = user.role.toUpperCase();\n      let userEmail = user.email.toUpperCase();\n        if (userName.includes(event.target.value.toUpperCase()) || userRole.includes(event.target.value.toUpperCase()) || userEmail.includes(event.target.value.toUpperCase())){\n          user.index= index;\n          return user;    \n        }\n       return result;\n    })\n    this.setState({\n      search: event.target.value,\n      usersSearch: result,\n    })\n  }\n\n  toggleModal = () => {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  render() {\n    const { users, isVisible, search, usersSearch } = this.state;\n\n    return (\n      <React.Fragment>\n        <div className=\"new-users\">\n          <button className=\"primary-button\" onClick={this.toggleModal}>Add new Users</button>\n        </div>\n          <Modal show={this.state.isOpen} onClose={this.toggleModal}>\n            <NewUser data={users} onSubmit={this.handleSubmit} />\n          </Modal>\n        <div className=\"search-navbar\">\n          {/* <h1>Search</h1> */}\n          <div className=\"search-bar\"><input  className=\"form-input\" type=\"search\" name=\"search\" placeholder=\"Search by username, email, role...\" value={search} onChange={this.handleSearch}/></div>\n        </div>\n        <section className=\"users-container\">\n            {usersSearch.map((user, index) => {\n              return <div className=\"card\" key={index}>\n                        <img className=\"card-image\" src={user.picture} alt={user.name} />\n                        <div className=\"user-text\"><p>{user.name}</p></div>\n                        <div className=\"user-text\"><p>{user.email}</p></div>\n                        <div className=\"user-text\"><p>{user.role}</p></div>\n                        <EditUser key={index} index={index} data={user} onCallback={this.handleEdit}  />\n                     </div>\n            } )}  \n        </section>\n        { isVisible ? <div className=\"load-button-container\"><button className=\"primary-button\" onClick={this.handleLoadMore}>Load More</button></div> : <React.Fragment></React.Fragment> }\n        <div className=\"bottom-container\"></div>\n      </React.Fragment>\n    )\n  }\n}\n\n\nexport default Users;\n","import React, { Component } from 'react'\n\nclass NavBar extends Component {\n  render() {\n    return (\n      <div class=\"navbar\">\n        <h1>Management App</h1>\n      </div>\n    )\n  }\n}\n\nexport default NavBar;\n","import React, { Component } from 'react'\n\nclass SideBar extends Component {\n  render() {\n    return (\n      <div>\n        \n      </div>\n    )\n  }\n}\n\nexport default SideBar;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Users from './components/users';\nimport NavBar from './components/navbar';\nimport SideBar from './components/sidebar';\n\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n            <NavBar />\n            <SideBar />\n            <Users /> \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}